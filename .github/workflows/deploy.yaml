name: deploy

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20]
    # existen los servicios Definir que son
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: install redis cli
        run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      - name: test redis
        run: redis-cli -h localhost -p 6379 ping
        # los secretos en github no son visibles realizar definicion
      - name: print var
        run: echo ${{ secrets.TOKEN_SECRET }}

      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: instalar dependencias
        run: npm install

      - name: run test
        run: npm run test

      #investigar estas funciones success / always / failure
      # desglosar para que sirve esto
      - name: upload artifact of pages
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == 18 }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    # dar definicion de esto
    permissions:
      pages: write
      id-token: write
    # dar definicion de esto
    environment:
      name: github-pages
      url: ${{ steps.deployment-pages.outputs.page_url}}
    # dar definicion de esto
    steps:
      - name: deploy
        id: deployment-pages
        uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: notify to slack
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK }}
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,job,took
